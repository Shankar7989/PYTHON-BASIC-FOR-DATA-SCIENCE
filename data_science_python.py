# -*- coding: utf-8 -*-
"""Data science python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rHwlzeIBp35VsjgksAbKpn03RQoVuMZP
"""

a='hello world'
print(a)

x=5
y=5.5
z='hello'
print(x,y,z)

"""Artifical intelligance is divided in to three types they are the narrow ai and super Ai and gen ai , the gen is advance than the narrow ai and super ai is advance than the gen ai .
The machine learning is the building blocks of AI. The mechanine learning is furthure divided in to the supervised mL , unsupervised ML and renforcment ML.The deep learning is fruther dividd in to the Artifical neural networks ,Recurrent neural networks and conventional neural networks.
In side the ML snd DL wwe find the computer vision and the Natural language processing .The computer vision is the part of the Deep learning .OOps stands for obejective oriented program system.In Cv we find the Images and videos and in NLP we find in the form of text and audio. The cv best example is google lens and filters. Story telling is the process of converting the visual information in the form of the text By own.Ann we find he structed data and in CNN we find the unstructured data.In the programming language we see that the commpliation and intepretened language . The python is the compliation language . The java .c++ are the interpretened languages. The framwork of the python is the jango script.IDE stands for the Integrated dvelopment enivroment . We have both the online IDE and the Offline IDE. Google colab is the online IDE platform.
Variables are the containers in the python . In the variables we are storing the data . There are three types of data types they are the sequentional data , bollean data and the numerical data . the numerical data is fruther divided in to three types they are the complex numbers , float and integers and the sequentional data is fruther divided in to the tupe, list and strings  Bollean type means true or false. And remaining are the dictionaires and sets.  In python instead of I we ar using J. In python the data is muttable and immutable in nature . Muttable means the modifications are able to do  And immutable means we are unable to do modifications.Any thing written in the brackets is called string.
"""



num='234.6'
print(num)
type(num)

"""The three important operations with in the list are the concatination , indexing and slicing .The concatination means adding two variables and slicing means fetching elements with in the list and indexing is the form of giving specific position to particular Place . The list are two types they are normal list and the nested list.In nested we want to give index position to both global index and the local index."""

my_list=[1,2,3,4,5]
a=['apple','bannana','grapes']
print(my_list+a)

print(a+my_list)

new_list=[1,2,3,4,5]
print(new_list)

a="indian ocean"
print(a)
a[0:8]

a="Hello my name is M.Ravi shankar"
print(a)
a[0:10]

name="Hello my name is Ravi , Hello i am from Anantapur, Hello i didnot need books for studing"
print(name.replace("Hello","hi"))

name="Hello my name is vishnu, Hello i did masters in physiotherapy, Hello i am doing well"
print(name.replace("Hello","hi",1))

a='ravishankar'
print(a.upper)
print(a.lower)
print(a.capitalize())

a=[1,2,3,4,5,6,7,8,9,10]
print(len(a))
print(max(a))
print(min(a))
print(a.count(1))

my_list=['apple','bannana','grapes','papaya','onion']
print(my_list)
my_list.append('kiwi')
my_list.insert(1,'tomato')
print(my_list)
print(my_list.count('apple'))
my_list.remove('apple')
print(my_list)
my_list.pop()

print(my_list)

print(my_list)

my_list.extend('1,2,3,4,5')

print(my_list)

my_list=[1,2,3,4,5,6,7,89]
print(len(my_list))

my_list=[1,2,4,4,8,9,89,56,90,2,6,8,9,10,89]
my_list.sort()
print(my_list)

my_list.sort(reverse=True)
print(my_list)

"""lists=append,pop,len,count,insert,extend,max,min,sort,sort(reverse=True)."""

t=('china','africa','india','pakistan')
print(t)
type(t)

print(t)

t[2]

t[0:3]

max(t)
min(t)

"""Dictionaries we find only{} , keys and values ."""

a=['apple','bannana','grapes','papaya','onion']

print(a[1])

print(a[1:4])

# we can perform indexing in list
#Both negative indexing and positive indexing

a=['apple','bannana','grapes','papaya','onion','brinzal','tomato','gapes']
if 'apple' in a:
   print('yes,apple in fruits a')

a=[1,2,3,4,5,6,7,8,9,10]
if 1 in a:
   print('yes, 1 is present in a')

a=[1,2,3,4,5,6,7,8,9,10]
a[0]=10
print(a)

b=['apple','bannana','grapes','papaya','onion']
if 'apple' in b:
  print('yes,apple is present in b')
  b[0]='kiwi'
  print(b)

Anu=['college','student','tution']
if 'college' in Anu:
  print('she is going to college')
else:
  print('she is not going to college')
Anu[0]='school'
print(Anu)

a=['apple','bannana','grapes','papaya','onion']
a.insert(2,'kiwi')
print(a)

# Remove and pop function and clear used to remove the iteams in the list

"Ravi's shankar"

print('John\'s "car"')

t= ["india","china","africa","pakisthan"]
print(t)
type(t)

memo={'apple':90,'bannana':100,'chocolates':90,'biscuits':90,'grapes':200}
print(memo)
type(memo)
memo['chilli']=90
print(memo)
memo.pop('chocolates')
print(memo)
memo.keys()
memo.values()
print(memo)

# in sets you have only add and discard function

keys=['Ten','Twenty','Thirty']
values=[10,20,30]
dict(zip(keys,values))

keys=['chocolates','biscuits','bannana','papaya']
values=[10,20,30,49]
dict(zip(keys,values))

dict1={'ten':10,'twenty':30,'thirty':40}
dict2={'thirty':30,'fourty':40,'fifty':90}
dict3={ **dict1, **dict2}
print(dict3)

# dict(zip(keys,values)), dict3={**dict1,**dict2}

employees=['kelly','emma','John']
defaults={'designation':'application developer','salary':8000}
res=dict.fromkeys(employees,defaults)
print(res)

employees=['ravi','vishnu','shankar','vardhan']
defaults={'designation':'physiotherapist','salary':10000}
res=dict.fromkeys(employees,defaults)
print(res)

#dect(zip(keys,values)),dict3={**dict1,**dict2},res=dict.fromkeys(employess,values)

sampledict={'name':'kelly','age':25,'salary':8000,'city':'newyork'}
keys=['name','salary']

newdict={keys:sampledict[keys]for keys in keys}
print(newdict)

list1=['name','age','salary','city']
list2=['kelly','25',90000,'newyork']
dict(zip(list1,list2))

sampledict={"name":"kelly","age":23,"salary":8000,"city":"newyork"}
keysToRemove=['name','salary']

sampledict={a:sampledict[a] for a in sampledict.keys()-keysToRemove}

print(sampledict)

my_tupe=(1,2,3,4,5,6,7,8)
sum(my_tupe)
print(my_tupe)

sum(my_tupe)

max(my_tupe)
min(my_tupe)

len(my_tupe)

print(my_tupe.count(2))

"""Dictionaries we use , in dictionaries we have both keys and values .
memo values and keys we see in dictionaries .Set function helps in dictionaries count the replace the duplicate values.memo.pop(1) this key helps to delete one item in the dictionaries.memo.clear().
"""

data={'name':'bob','age':39,'salary':35000,'city':'newyork'}
print(data)
data['desigantion']='software engineer'
print(data)
data['salary']=40000
print(data)
data.pop('age')
print(data)

data.clear()
print(data)

#In sets we see only the add and discard.s.add() and s.discard()

#Bollean means true or false

temp=int(input('enter the temperature'))
if temp >=40:
  print('it is so hot')
else:
  pass
  print('it is normal')

"""The arthemeatic operators are the +,-,*,/. And the logical operators are the And ,or ,not and Modulo operator is % , comparision operators are the < or > ==. Assessmental operators are = or !=. It is not equal to.There are two types of loops for loop and while loop."""

for i in range(1,10):
  print(i)

a=1
while a<10:
  print(a)
  a=a+1

list=[1,2,3,4,5,6,7,8,9,10]
for i in list:
  if i%2==0:
    print(i)

for i in range(1,20):
  if i%3==0:
    print(i)

a=2
while a<=20:
  print(a)
  a=a+2

fruits=['apple','bannana','guvava','grapes','papaya','kiwi','orange']
for i in fruits:
  if i == 'kiwi':
    break
  print(i)

for i in range(1,20):
 if i ==12:
  break
  print(i)
 elif i==10:
  pass
  print(i)

def add(a,b):
 c=a+b
 print(c)

add(10,20)

def add(a,b):
  sum=a+b
  print(sum)

add(20,30)

def compute(a,b):
  a=a+b
  b=a-b
  c=a/b
  d=a*b
  return a,b,c,d

a=compute(10,20)
print(a)

Keys=['ten','twenty','thirty','fourty']
values=[10,20,30,40]
new_dict=dict(zip(keys,values))
print(new_dict)

keys=['apple','bannana','grapes','papaya','mango','guvava','kiwi']
values=[20,30,40,50,60,70,80,80]
new_dict=dict(zip(keys,values))
print(new_dict)

keys=['chocolates','biscuits','apples','papaya','layes']
values=[10,20,50,30,60,90,100,89]
new_dict=dict(zip(keys,values))
print(new_dict)

dict1={'ten':10,'twenty':20,'thirty':30}
dict2={'thirty':30,'fourty':40,'fifty':50}
dict3={**dict1,**dict2}
print(dict3)

dict1={'apple':200,'banana':300,'grapes':300}
dict2={'grapes':400,'papaya':900,'juvava':900}
dict3={**dict1,**dict2}
print(dict3)

#new_dict=dict(zip(kyes,values)), dict3={**dict1,**dict2}

employees={'kelly','emma','john'}
defaults={'designation':'application developer','salary':80000}
answer=dict.fromkeys(employees,defaults)
print(answer)

employees={'RAvi','vishnu','vardhan','shankar'}
defaults={'designation':'PHYSIOTHERAPIST','SALARY':100000}
answer=dict.fromkeys(employees,defaults)
print(answer)

#new_dict=dict(zip(keys,values)), dict3={**dict1,**dict2},answer=dict.fromkeys(employees,defaults)

sample_dict={'name':'kelly','age':25,'salary':8000,'city':'newyork'}
keys=['name','salary']
new_dict={keys:sample_dict[keys]for keys in keys}
print(new_dict)

sample_dict={'name':'bob','age':25,'salary':8000,'city':'newyork'}
keys=['name','salary']
new_dict={keys:sample_dict[keys]for keys in keys}
print(new_dict)

sample_dict={'name':'bob','age':25,'salary':90000,'city':'newyork'}
keys=['name','salary']
new_dict={keys:sample_dict[keys]for keys in keys}
print(new_dict)

#new_dict={keys:sample_dict[keys]for keys in keys}

#delete set of keys from python dictionaries
sample_dict={'name':'kelly','age':25,'salary':80000,'city':'newyork'}
keysToRemove=['name','salary']
sample_dict={a:sample_dict[a]for a in sample_dict.keys()-keysToRemove}
print(sample_dict)

"""sample_dict={a:sample_dict[a] for a in sample_dict.keys()-keysto remove}
sample_dict={a:sample_dict[a]for a in sample_dict.keys()-keysTo Remove}
sample_dict={a:sample_dict[a]for a in sampele_dict.keys()-keysTo Remove}
sample_dict={a:sample_dict[a]for a in sample_dict.keys()-keys To Remove}
sample_dict={a:sample_dict[a]for a in sample_dict.keys()-keys To Remove}
sample_dict={a:sample_dict[a]for a in sample_dict.keys()-keys To remove}
sample_dict={a:sample_dict[a]for a in sample_dict.keys()-keys To remove}
sample_dict={a:sample_dict[a]for a in sample_dict.keys()-keys To Remove}
sample_dict={a:sample_dict[a]for a in sample_dict.keys()-keys TO Remove}
dict3={**dict1,**dict2}, new_dict={keys:sample_dict[keys]for keys in keys},new_dict=dict(zip()),rep=dict:fromkeys(employees,salary)
"""