# -*- coding: utf-8 -*-
"""datavisualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IRCzt2BX8lNbsfFZv5thQQtySCRCpDDb

The machine learning is the building blocks of artifical intelligance , there are different types of machine learning they are 1) supervised machine learning 2) unsupervised machine learning 3) reinforcement machine learning . In machine learning the libaries is sk learn .There are different types of models numpy ,pandas and matplot lib and seaborn . The numpy and pandas is used for data analysis and matplotlib and seaborn is used for data visualization.
numpy stands for numbers in python or numerical python , all types of data analysis with respect to different arrays using python . it is operate on top of arrays ,but in python we cannot talk about arrays . when using numpy we can convert list in to array .numpy is also generate random numbers . along with numpy the pandas also help to generate random numbers .pandas also used for loading and reading the data . with the use of pandas we also do basic analysis . by using the pandas we also do statical analysis .by using pandas we also generate dummy data set . for this areas numpy and pandas helps you .
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

my_list=[1,2,3,4,5]
type(my_list)
new_arr=np.array(my_list)

type(new_arr)

print(new_arr)

"""# this is the way we are converting list to the arr by using arr=np.array(my_list)"""

my_list_1=[2,3,7,9,8]
my_list_2=[2,3,4,1,7]
my_list_3=[9,8,0,4,5]
arr=np.array([my_list_1,my_list_2,my_list_3])

print(arr)

arr.reshape(3,5)

"""if you want single opening brackets it is one dimensional array and if you want two opening brackets it is two dimentional array.first rows comes and then after column comes.Meaning of transpose is converting rows in to columns and columns in to rows."""

a=np.array([2,3,5,6,8])

print('adding 1 to each number from the list',a+1)
print('subtract 1 from each number from the list',a-1)
print('multiply 5 to each element from the list',a*5)
print('square of each element from the list',a**2)

# now we are generating random numbers
np.arange(1,20,1)#here space is 1 in between the numbers

np.arange(1,20,3)

np.linspace(1,10,50)

np.linspace(1,10,100)

array=np.random.rand()

print(array)

np.random.rand(3,4)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv('/content/tips.csv')

data.head()

data.tail()

data.info()

data.describe()

import numpy as np
import pandas as pd#for creating numpy and pandas for creating dummy datasets

#dummy data set code
import pandas as pd
import numpy as np
my_data=pd.DataFrame(np.arange(0,20).reshape(4,5),index=[4,5,6,7],columns=['colo','colo1','colo2','colo3','col4'])

print(my_data)

my_data.iloc[2:4,2:]

my_data.iloc[2:4]

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as snr

iris=snr.load_dataset('iris')

iris.head()

iris.tail()

a=iris.plot(figsize=(10,5),title='iris dataset')
a.set_xlabel('x axis')
a.set_ylabel('y axis')

iris.drop(['species'],axis=1)

iris.plot(kind='bar')

# so we can be break down the data by using iloc function
iris.iloc[0:3].plot(kind='bar')

iris.iloc[0:20].plot(kind='bar')

# Select only the numeric columns before plotting.
# This assumes the 'species' column is non-numeric.
iris.iloc[0][['sepal_length', 'sepal_width', 'petal_length', 'petal_width']].plot(kind='barh')

iris.plot(kind='hist',bins=200)

#bins is the thickness
iris.plot(kind='hist',bins=20)#if you decrease the bins the thickness will be increased

iris.plot(kind='hist',bins=100)

iris['sepal_length'].plot(kind='hist', bins=200)# if we want to visualize one coloumn at a time by using this code

iris['sepal_width'].plot(kind='hist',bins=200)

iris.info()

import pandas as pd
import matplotlib.pyplot as plt

numerical_data = iris.iloc[100][['sepal_length', 'sepal_width', 'petal_length', 'petal_width']]

# Create the pie chart
numerical_data.plot.pie(figsize=(5, 5), fontsize=15, autopct='%1.1f%%') # Changed frontsize to fontsize and autopict to autopct
plt.show()

numerical_data.plot.pie( subplots=True,figsize=(10,10),fontsize=10,autopct='%2f')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as snr

iris=snr.load_dataset('iris')

iris.info()

iris.head(50)

"""Advance visualization is also called as exploratory data analysis(EDA).we will work on 1)scatter plot 2)Relational plot 3)Box plot 4) pair plot 5)Heatmap 6)cat plot"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as snr

a=pd.read_csv('/content/tips.csv')

"""scatter plot helps to visualize the relationship between two coloumns , if there is more than two coloumns use relational plot ."""

a.head()

a.plot.scatter(x='total_bill',y='tip')#here by using scatter plot we compare only two coloumns

"""This graph is linear in data .And also if you want to change it colour us the code mentioned in below,at the end add just color name"""

a.plot.scatter(x='total_bill',y='tip',color='g')

"""if we want to visualize two or more coloumns we are using the relational plot . so here we are using instead of pandas , seaborn (snr)"""

snr.relplot(x='total_bill',y='tip',data=a,hue='sex')#if any coloumn put inside the hue it is colourful

"""next we are following the same code by shaping the category ,if any thing put inside style it is colourful"""

snr.relplot(x='total_bill',y='tip',data=a,hue='sex',style='smoker',color='g')

"""Now we are comparing more than two or more parameters ,so we are introducing coloumn (col ) paramater"""

snr.relplot(x='total_bill',y='tip',data=a,hue='sex',style='smoker',col='day')

#if we want to increase size of the graph
snr.relplot(x='total_bill',y='tip',data=a,hue='sex',style='smoker',col='day',size=200)

"""question-- visualize the relation between total_bill collected and tip for lunch and dinner time .Here we are comparint two are more parameters so we are using the relationship plot"""

snr.relplot(x='total_bill',y='tip',data=a,col='time',size=3)

snr.pairplot(a)

"""catplot is categorical plot .it has family of graphs inside"""

snr.catplot(x='day',y='total_bill',kind='bar',hue='sex',col='time',data=a)

snr.catplot(x='day',y='total_bill',hue='sex',kind='box',data=a)